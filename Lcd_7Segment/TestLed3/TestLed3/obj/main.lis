                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\revecom\Desktop\PSOC\TestLed3\TestLed3\TestLed3\main.c
 0000                   .dbfunc e main _main fV
 0000           ;          decom -> X+7
 0000           ;           cols -> X+6
 0000           ;           rows -> X+5
 0000           ;           code -> X+4
 0000           ;            val -> X+2
 0000           ;           comp -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 380B              add SP,11
 0004                   .dbline 122
 0004           ; //----------------------------------------------------------------------------
 0004           ; // C main line
 0004           ; //----------------------------------------------------------------------------
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; 
 0004           ; 
 0004           ; /* hay hata serveuse baz3et alia l9ahwa*/
 0004           ; /*
 0004           ; void main(void)
 0004           ; {
 0004           ;       /*9bal question 5 mala hayet*/
 0004           ;       /*part1*/
 0004           ;       /*
 0004           ;       char s[] = "Hello Lcd";
 0004           ;       char rows=0,cols=0,code;
 0004           ;       LED_BL_Start();
 0004           ;       LED_BL_Switch(1);
 0004           ;       // M8C_EnableGInt ; // Uncomment this line to enable Global Interrupts
 0004           ;       // Insert your main routine code here.
 0004           ;       LCD_1_Start();
 0004           ;       /*enable eclarage led*/
 0004           ;       /*
 0004           ;       LCD_1_Position(0, 4);
 0004           ;       LCD_1_PrString(s);
 0004           ;       LCD_1_Position(1, 4);
 0004           ;       LCD_1_PrCString("Ah Ya Denia");  */
 0004           ;       
 0004           ;       
 0004           ;       
 0004           ;       /*part2  : keyboard w lcd*/
 0004           ;       /*
 0004           ;       PRT4DR = 0xf0;
 0004           ;       cols=PRT4DR;
 0004           ;       PRT4DR=0x0f;
 0004           ;       rows=PRT4DR;
 0004           ;       code = rows & cols; 
 0004           ;       while (1){
 0004           ;               switch (code) {
 0004           ;                           case 0x18 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B1");
 0004           ;                               break; 
 0004           ;                           case 0x14 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B2");
 0004           ;                               break;
 0004           ;                           case 0x12 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B3");
 0004           ;                               break;
 0004           ;                           case 0x11 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B4");
 0004           ;                               break;
 0004           ;                           case 0x28 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B5");
 0004           ;                               break;
 0004           ;                               
 0004           ;                           case 0x24 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B6");
 0004           ;                               break;
 0004           ;                               case 0x22 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B7");
 0004           ;                               break;
 0004           ;                               case 0x21 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B8");
 0004           ;                               break;
 0004           ;                               case 0x48 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B9");
 0004           ;                 case 0x44 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B10");
 0004           ;                               break;
 0004           ;                               case 0x42 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B11");
 0004           ;                               case 0x41 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B12");
 0004           ;                               break;
 0004           ;                               case 0x88 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B13");
 0004           ;                               break;
 0004           ;                               case 0x84 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B4");
 0004           ;                               break;
 0004           ;                               case 0x82 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B15");
 0004           ;                               break;
 0004           ;                               case 0x81 :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("B16");
 0004           ;                               break;  
 0004           ;                               default :
 0004           ;                               LCD_1_Position(0, 4);
 0004           ;                               LCD_1_PrCString("Aucune Bouton N'est activ√©e"); } fin switch
 0004           ;       /* ps : l port4 c est un registre , shih mellowel initialisee 0f w ntaih l rows f f0 lel cols 
 0004           ;                               w code tekhou l produit , mais kol mal value ta l port4 tetbadel , l code automatiquement yetbadel sans inteventions
 0004           ;                               du soft , c'est purement de hardware ici*/
 0004           ;       
 0004           ;       
 0004           ; /* saisie de user*/                           
 0004           ;       
 0004           ;       /*      
 0004           ;       
 0004           ; }
 0004           ; }
 0004           ; */
 0004           ; /*7 segment*/
 0004           ; 
 0004           ; 
 0004           ; void main(void){
 0004                   .dbline 123
 0004           ;    int val=1111,comp=0,decom=20;
 0004 560357            mov [X+3],87
 0007 560204            mov [X+2],4
 000A                   .dbline 123
 000A 560100            mov [X+1],0
 000D 560000            mov [X+0],0
 0010                   .dbline 123
 0010 560814            mov [X+8],20
 0013 560700            mov [X+7],0
 0016                   .dbline 124
 0016           ;    char rows=0,cols=0,code;
 0016 560500            mov [X+5],0
 0019                   .dbline 124
 0019 560600            mov [X+6],0
 001C                   .dbline 125
 001C           ;    PRT4DR =0x0f;
 001C 62100F            mov REG[0x10],15
 001F                   .dbline 126
 001F           ;    rows=  PRT4DR;
 001F 5D10              mov A,REG[0x10]
 0021 5405              mov [X+5],A
 0023                   .dbline 127
 0023           ;    PRT4DR=0xf0;
 0023 6210F0            mov REG[0x10],-16
 0026                   .dbline 128
 0026           ;    cols=PRT4DR;
 0026 5D10              mov A,REG[0x10]
 0028 5406              mov [X+6],A
 002A                   .dbline 129
 002A           ;    code=rows & cols;
 002A 5205              mov A,[X+5]
 002C 2306              and A,[X+6]
 002E 5404              mov [X+4],A
 0030                   .dbline 131
 0030           ;       
 0030           ;    LED7SEG_1_Start()          // Enable display
 0030 7C0000            xcall _LED7SEG_1_Start
 0033 7101                      or  F, 01h
 0035           
 0035                   .dbline 133
 0035           ;    M8C_EnableGInt;  
 0035           ;    M8C_EnableGInt;// Enable IRQ 
 0035 7101                      or  F, 01h
 0037           
 0037 8074              xjmp L3
 0039           L2:
 0039                   .dbline 160
 0039           ;    
 0039           ;       /*1 ) 
 0039           ;             
 0039           ; 
 0039           ; // Enable multiplex timer here if using
 0039           ;    // non-built-in-timer version.
 0039           ;    LED7SEG_1_DispInt(1234, 1, 4); // Display "1234"
 0039           ;    LED7SEG_1_DP(1, 3);            // Turn on DP ( 123.4 )
 0039           ; }
 0039           ; 
 0039           ; */
 0039           ; //2) 
 0039           ;       /*se de 11.11 vers 99.99*/
 0039           ;       /*
 0039           ;       while (1){
 0039           ;       while (val < 11110){
 0039           ;       LED7SEG_1_DispInt(val, 2,5); //digit2/digit3/digit4/digit5
 0039           ;       LED7SEG_1_DP(1,3);            //pour 1111 => 11.11
 0039           ;       val+=1111;      
 0039           ;       }
 0039           ;       val=1111;
 0039           ;       }
 0039           ;       
 0039           ;       
 0039           ; }*/
 0039           ; ///3
 0039           ;       while (1){
 0039                   .dbline 162
 0039           ;               
 0039           ;               switch (code) {
 0039 5204              mov A,[X+4]
 003B 540A              mov [X+10],A
 003D 560900            mov [X+9],0
 0040 520A              mov A,[X+10]
 0042 1118              sub A,24
 0044 5300              mov [__rY],A
 0046 5209              mov A,[X+9]
 0048 3180              xor A,-128
 004A 1980              sbb A,(0 ^ 0x80)
 004C C05F              jc L5
 004E 2A00              or A,[__rY]
 0050 A025              jz L10
 0052           X1:
 0052           L16:
 0052 3D0900            cmp [X+9],0
 0055 B006              jnz X2
 0057 3D0A81            cmp [X+10],-127
 005A A041              jz L14
 005C           X2:
 005C 804F              xjmp L5
 005E           L9:
 005E                   .dbline 164
 005E           ;                       case 0x18 :  //b1
 005E           ;                               while (comp < 21 ) {
 005E                   .dbline 165
 005E           ;                                       LED7SEG_1_DispInt(val, 1,2);
 005E 10                push X
 005F 5002              mov A,2
 0061 08                push A
 0062 5001              mov A,1
 0064 08                push A
 0065 5202              mov A,[X+2]
 0067 08                push A
 0068 5203              mov A,[X+3]
 006A 08                push A
 006B 7C0000            xcall _LED7SEG_1_DispInt
 006E 38FC              add SP,-4
 0070 20                pop X
 0071                   .dbline 166
 0071           ;                                       comp+=1;
 0071 7701              inc [X+1]
 0073 0F0000            adc [X+0],0
 0076                   .dbline 167
 0076           ;                               }
 0076           L10:
 0076                   .dbline 164
 0076 5201              mov A,[X+1]
 0078 1115              sub A,21
 007A 5200              mov A,[X+0]
 007C 3180              xor A,-128
 007E 1980              sbb A,(0 ^ 0x80)
 0080 CFDD              jc L9
 0082           X3:
 0082                   .dbline 168
 0082           ;                               break;
 0082 8029              xjmp L6
 0084           L13:
 0084                   .dbline 170
 0084           ;                       case 0x81 : //b16
 0084           ;                               while (comp > 0 ) {
 0084                   .dbline 171
 0084           ;                                       LED7SEG_1_DispInt(val, 1,2);
 0084 10                push X
 0085 5002              mov A,2
 0087 08                push A
 0088 5001              mov A,1
 008A 08                push A
 008B 5202              mov A,[X+2]
 008D 08                push A
 008E 5203              mov A,[X+3]
 0090 08                push A
 0091 7C0000            xcall _LED7SEG_1_DispInt
 0094 38FC              add SP,-4
 0096 20                pop X
 0097                   .dbline 172
 0097           ;                                       comp-=1;
 0097 7B01              dec [X+1]
 0099 1F0000            sbb [X+0],0
 009C                   .dbline 173
 009C           ;                               }
 009C           L14:
 009C                   .dbline 170
 009C 5000              mov A,0
 009E 1301              sub A,[X+1]
 00A0 5200              mov A,[X+0]
 00A2 3180              xor A,-128
 00A4 5300              mov [__rX],A
 00A6 5080              mov A,(0 ^ 0x80)
 00A8 1A00              sbb A,[__rX]
 00AA CFD9              jc L13
 00AC           X4:
 00AC                   .dbline 176
 00AC           ;                       
 00AC           ;                       
 00AC           ;                           break;;     
 00AC                   .dbline 176
 00AC           L5:
 00AC           L6:
 00AC                   .dbline 180
 00AC           ;               }
 00AC           ;               
 00AC           ;               
 00AC           ;       }
 00AC           L3:
 00AC                   .dbline 160
 00AC 8F8C              xjmp L2
 00AE           X0:
 00AE                   .dbline -2
 00AE           L1:
 00AE 38F5              add SP,-11
 00B0 20                pop X
 00B1                   .dbline 0 ; func end
 00B1 8FFF              jmp .
 00B3                   .dbsym l decom 7 I
 00B3                   .dbsym l cols 6 c
 00B3                   .dbsym l rows 5 c
 00B3                   .dbsym l code 4 c
 00B3                   .dbsym l val 2 I
 00B3                   .dbsym l comp 0 I
 00B3                   .dbend
